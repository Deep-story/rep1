git init - добовляет проект
git config user.name "Anton"
git config user.email "a.zabelendik@vitebsk.energo.by"
cat .git/config выводит содержимое конфига

--system на уровне системы
--global на уровне пользователя
--local (default) на уровне проекта

git config --list выведет конифиги всех 3 выше указанных уровней

Для сокращения команд нужно делать алиасы на команды в конфиге.

git add имя файла добавит его в index локальный

git status - что сейчас происходит

git commit -m"текст коммита" - сделать снимок

git clone ссылка на репозиторий для клонирования  git clone git@github.com:Deep-story/rep1.git

git push origin для загрузки в репозиторий

ssh-keygen

git remote -v показывает удаленные репозитории

Изначально, создается пустой репозиторий, далие привязывается ssh ключ, после клонируется на пк, переходим в склонированную папку, открывает консоль и выполняем все действия внутри этой папки т.к в ней создается .git

git pull подтягивает изменения из github

git log показывает историю комитов
git log -n(-1, -2 и т.д) показывает, вывести псоледних n комитов
git log -p показывает, что именно было сделано в комитах, можно выбрать с -n

git checkout --имя файла вернет файл, к состоянию прежде, чем вы сделаете комит

git diff --staged покажет какие изменения запишутся в лог

.gitignore создаем такой файл, в котором прописываем какие файлы и директории игонировать, для комитов

git branch показывает какие есть бренчи

git branch имя бренча, создаст имя бренча

git checkout имя бренча, позволяет перейти на выбранный бренч

git branch -d имя бренча, удаляе указанный бренч

git checkout -b имя бренча, позволяет создать новый бренч и сразу перейти на него

git branch -D имя бренча, удалит бренч с комитом

git merge имя бренча, позволяет соединить главную ветку и любой другой

git checkout номер хэша комита, взяты из git log позволяет вернуться на указанную версию временно
Можно ходить смотреть на только бренчи но и по тагам

git commit --amend позволяет изменить уже созданный комит ничего не удаляя

git reset --hard HEAD~n где n число комитов на которые нужно вернутся назад, он их замочит

git reset --soft HEAD~n где n число комитов которые убить, сделает коммит оставшийся с текущими файлами последнимм например

git push --set-upstream origin name branch создает на удаленном репо этот новый бренч и загружает в него файлы и исправления

git push origin --delete имя бренча удалить удаленный бренч в нашей гит репо

git tag показать существующие таги

git tag версия, версия тага для текущего состояния 

git push origin версия, пушит на репо наш созданный таг

git log --pretty=oneline показывает сделанный коммиты с их тагами

git tag -d версия позволяет удалить таг указанной версии

Таги даются только main бренчу

git tag -a версия хэш , позволяет добавить таг, если вы его ранее пропустили при создании комитов

git push origin --tags пушит сразу все таги созданные
















